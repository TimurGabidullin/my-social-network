{"version":3,"sources":["components/common/FormsControls/FormsControls.tsx","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.ts","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["TextArea","input","meta","props","hasError","touched","error","className","styles","formControl","module","exports","required","value","maxLengthCreator","maxLength","length","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onChange","e","currentTarget","onBlur","updateStatus","ProfileInfo","profile","s","descriptionBlock","src","photos","large","Preloader","Post","message","likesCount","posts","item","alt","MyPosts","React","memo","state","profilePage","addPost","postsElements","map","p","id","postsBlock","MyPostFormRedux","onSubmit","values","newPostText","maxLength10","reduxForm","form","handleSubmit","Field","component","name","validate","placeholder","MyPostsContainer","connect","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.7e4c9db6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\n\r\ntype TextAreaInputPropsType = {\r\n    input: any\r\n    meta: any\r\n}\r\n\r\nexport const TextArea: React.FC<TextAreaInputPropsType> = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                <textarea {...input} {...meta} {...props}/>\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport const Input: React.FC<TextAreaInputPropsType> = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                <input {...input} {...meta} {...props}/>\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3vv6I\",\"error\":\"FormsControls_error__3larS\",\"formSummaryError\":\"FormsControls_formSummaryError__9Xn4F\"};","export const required = (value: string) => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    if (value && value.length > maxLength) return `max length is ${maxLength} symbols`\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__aEa0n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__28sBn\",\"posts\":\"MyPosts_posts__1IQ6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2ejwt\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {ChangeEvent, useEffect, useState} from 'react';\r\n\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileStatusWithHooks: React.FC<ProfileStatusPropsType> = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"---\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true} onChange={onStatusChange} value={status}\r\n                       onBlur={deactivateEditMode}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","\r\nimport React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport {ProfileType} from \"../../../redux/profile-reducer\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile:ProfileType\r\n    status:string\r\n    updateStatus:(string:string)=>void\r\n}\r\n\r\nconst ProfileInfo:React.FC<ProfileInfoPropsType> = (props) => {\r\n\r\n    const {profile,status,updateStatus,}=props\r\n\r\n    if(!profile){\r\n        return <Preloader/>\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large}/>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport {PostType} from \"../../../../redux/profile-reducer\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Post:React.FC<PostType> = (props) => {\r\n    const{message,likesCount}=props;\r\n    return (\r\n        <div className={s.posts}>\r\n            <div className={s.item}>\r\n                <img\r\n                    src={'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT-9wd1vdvmXNs9AobWt-l-fJi2o1CQpyJRqQ&usqp=CAU'}\r\n                    alt={''}/>\r\n                {message}\r\n                <div>\r\n                    <span>like {likesCount}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\"\r\nimport {InitialStateType} from \"../../../redux/profile-reducer\";\r\nimport {Field, InjectedFormProps, reduxForm,} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {TextArea} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\ntype MyPostsPropsType = {\r\n    profilePage: InitialStateType\r\n    addPost: (newPostText: string) => void\r\n}\r\n\r\nconst MyPosts = React.memo((props: MyPostsPropsType) => {\r\n\r\n    let state = props.profilePage\r\n    let {addPost} = props\r\n\r\n    let postsElements = state.posts.map(p => (\r\n        <Post key={p.id} id={p.id} message={p.message} likesCount={p.likesCount}/>))\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>()\r\n\r\n    const addPostHandler = (values: DataFormType) => {\r\n        addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My Post</h3>\r\n            <MyPostFormRedux onSubmit={addPostHandler}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\ntype DataFormType = {\r\n    newPostText: string\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm: React.FC<InjectedFormProps<DataFormType>> = (props) => {\r\n    const {handleSubmit} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field component={TextArea}\r\n                       name={'newPostText'}\r\n                       validate={[required, maxLength10]}\r\n                       placeholder={'Post message'}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nconst MyPostFormRedux = reduxForm<DataFormType>({form: 'profileAddNewPostForm'})(AddNewPostForm)\r\n\r\n\r\nexport default MyPosts","import React from 'react';\r\nimport MyPosts from \"./MyPosts\"\r\nimport {addPostActionCreator, InitialStateType,} from \"../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\ntype mapStateToPropsType = {\r\n    profilePage: InitialStateType\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    addPost: (newPostText:string) => void\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n    return {\r\n        addPost: (newPostText:string) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer=connect(mapStateToProps,mapDispatchToProps)(MyPosts)\r\n\r\n\r\nexport default MyPostsContainer","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileType} from \"../../redux/profile-reducer\";\r\n\r\n\r\ntype ProfilePropsType = {\r\n    profile: ProfileType\r\n    status: string\r\n    updateStatus:(string:string)=>void\r\n}\r\n\r\nconst Profile: React.FC<ProfilePropsType> = (props) => {\r\n\r\n    const {profile,status,updateStatus,} = props\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={profile} status={status} updateStatus={updateStatus} />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {ProfileType, getUserProfile, getStatus, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport Dialogs from \"../Dialogs/Dialogs\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    profile: ProfileType\r\n    status: string\r\n    authorizedUserId: string\r\n    isAuth: boolean\r\n}\r\n\r\n\r\ntype MapDispatchPropsType = {\r\n    getUserProfile: (userId: string) => void\r\n    getStatus: (userId: string) => void\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\ntype PathParamsType = {\r\n    // userId: any\r\n    userId: string\r\n}\r\n\r\ntype ProfileContainerPropsType = MapStatePropsType & MapDispatchPropsType & RouteComponentProps<PathParamsType>\r\n\r\nclass ProfileContainer extends React.Component<ProfileContainerPropsType> {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id as string,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose<React.FC>(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}